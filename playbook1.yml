---
- name: Home work 1
  hosts: carrier
  become: true
  vars:
    # Пример значений, их можно переопределять в inventory
    is_wordpress: true
    wordpress_port: 9000
    wordpress_db_name: wp_db
    db_user: wp_user
    db_pass: supersecurepassword
    db_root_pass: superrootpass
    db_host: wp-db
    wp_container_name: wp-app
    wp_db_container_name: wp-db
    domain: "kirill-gruzdy.ru"
    email: "kirillgr15@mail.ru"
    wordpress_data_dir: /srv/docker/wordpress
    mariadb_data_dir: /srv/docker/mariadb
  tasks:
    - name: Display Configuration Variables
      ansible.builtin.debug:
        msg:
          - "wordpress: {{ is_wordpress }}" # True or False
          - "wordpress_port: {{ wordpress_port }}" # 80 or 8080 or whatewer
          - "wordpress_db_name: {{ wordpress_db_name }}" # WP database name
          - "db_host: {{ db_host }}" # container name
          - "db_pass: {{ db_pass }}" # root password

    - name: Ensure apt cache is up to date (Ubuntu only)
      ansible.builtin.apt:
        update_cache: yes
      when: ansible_distribution == "Ubuntu"

    - name: Install Docker & nginx dependencies (Ubuntu only)
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - nginx
          - python3-docker
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Add Docker GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Install Docker engine (Ubuntu only)
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        update_cache: yes
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Create docker network for WP stack
      community.docker.docker_network:
        name: wp-network
        driver: bridge
        state: present

    - name: Create MariaDB data folder
      ansible.builtin.file:
        path: "{{ mariadb_data_dir }}"
        state: directory
        owner: root
        group: root
        mode: "0755"
    
    - name: Run MariaDB container
      community.docker.docker_container:
        name: "{{ wp_db_container_name }}"
        image: mariadb:11
        state: started
        restart_policy: unless-stopped
        networks:
          - name: wp-network
        env:
          MYSQL_DATABASE: "{{ wordpress_db_name }}"
          MYSQL_USER: "{{ db_user }}"
          MYSQL_PASSWORD: "{{ db_pass }}"
          MYSQL_ROOT_PASSWORD: "{{ db_root_pass }}"
        volumes:
          - "{{ mariadb_data_dir }}:/var/lib/mysql"

    - name: Create WordPress data directory
      ansible.builtin.file:
        path: "{{ wordpress_data_dir }}"
        state: directory
        owner: 33
        group: 33
        mode: "0755"
    
    - name: Run WordPress FPM container
      community.docker.docker_container:
        name: "{{ wp_container_name }}"
        image: wordpress:6-fpm
        state: started
        restart_policy: unless-stopped
        networks:
          - name: wp-network
        ports:
          - "127.0.0.1:9000:9000"
        env:
          WORDPRESS_DB_HOST: "{{ db_host }}"
          WORDPRESS_DB_NAME: "{{ wordpress_db_name }}"
          WORDPRESS_DB_USER: "{{ db_user }}"
          WORDPRESS_DB_PASSWORD: "{{ db_pass }}"
        volumes:
          - "{{ wordpress_data_dir }}:/var/www/html"
        
    - name: Create nginx-conf dir for custom nginx config
      ansible.builtin.file:
        path: /srv/docker/nginx-conf
        state: directory
        mode: "0755"
    
    - name: Upload nginx config for WordPress FPM
      ansible.builtin.copy:
        dest: /srv/docker/nginx-conf/wordpress.conf
        mode: "0644"
        content: |
          server {
            listen 80;
            server_name {{ domain }};

            root /var/www/html;
            index index.php;

            location / {
              try_files $uri $uri/ /index.php?$args;
            }

            rewrite /wp-admin$ $scheme://$host$uri/ permanent;

            location ~ [^/]\.php(/|$) {
              fastcgi_split_path_info ^(.+?\.php)(/.*)$;
              if (!-f $document_root$fastcgi_script_name) {
                return 404;
              }

              include fastcgi_params;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              fastcgi_param PATH_INFO       $fastcgi_path_info;
              fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;

              fastcgi_pass   {{ wp_container_name }}:{{ wordpress_port }};
              fastcgi_index  index.php;
            }
          }

    - name: Run nginx container for WordPress
      community.docker.docker_container:
        name: wp-nginx
        image: nginx:alpine
        state: started
        restart_policy: unless-stopped
        ports:
          - "80:80"
        networks:
          - name: wp-network
        volumes:
          - "{{ wordpress_data_dir }}:/var/www/html:ro"
          - /srv/docker/nginx-conf/wordpress.conf:/etc/nginx/conf.d/default.conf:ro