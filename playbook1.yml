---
- name: Home work 1 - Deploy Base Infrastructure (Docker, WordPress, Nginx, DB Master)
  hosts: carrier
  become: true
  vars:
    is_wordpress: true
    wordpress_port: 9000
    wordpress_db_name: wp_db
    db_user: wp_user
    db_pass: supersecurepassword
    db_root_pass: superrootpass
    db_host: wp-db
    wp_container_name: wp-app
    wp_db_container_name: wp-db
    domain: "kirill-gruzdy.ru"
    email: "kirillgr15@mail.ru"
    wordpress_data_dir: /srv/docker/wordpress
    mariadb_data_dir: /srv/docker/mariadb
    db_master: mariadb-master
    mariadb_master_data_dir: /srv/docker/mariadb-master
    db_repl_user: repl_user
    db_repl_pass: repl_password
    monitor_pass: monitor_password
  tasks:
    - name: Display Configuration Variables
      ansible.builtin.debug:
        msg:
          - "wordpress: {{ is_wordpress }}" # True or False
          - "wordpress_port: {{ wordpress_port }}" # 80 or 8080 or whatewer
          - "wordpress_db_name: {{ wordpress_db_name }}" # WP database name
          - "db_host: {{ db_host }}" # container name
          - "db_pass: {{ db_pass }}" # root password

    - name: Ensure apt cache is up to date (Ubuntu only)
      ansible.builtin.apt:
        update_cache: yes
      when: ansible_distribution == "Ubuntu"

    - name: Install Docker & nginx dependencies (Ubuntu only)
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-docker
          - python3-pymysql
          - mariadb-client # Клиент для ручной проверки (команда `mysql`, см. REAME 2 лб)
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Add Docker GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Install Docker engine (Ubuntu only)
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        update_cache: yes
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Create docker network for WP stack
      community.docker.docker_network:
        name: wp-network
        driver: bridge
        state: present

    - name: Create directories for MariaDB Master, configs and WordPress
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ mariadb_master_data_dir }}"
        - "/srv/docker/mariadb-conf"
        - "/srv/docker/nginx-conf"
    
    - name: Create WordPress data directory with correct permissions
      ansible.builtin.file:
        path: "{{ wordpress_data_dir }}"
        state: directory
        owner: 33 # www-data
        group: 33 # www-data
        mode: "0755"

    - name: Create MariaDB master config from template
      ansible.builtin.template:
        src: templates/master.cnf.j2
        dest: /srv/docker/mariadb-conf/master.cnf
        mode: "0644"

    - name: Run MariaDB Master container
      community.docker.docker_container:
        name: "{{ db_master }}"
        image: mariadb:11
        state: started
        restart_policy: unless-stopped
        networks:
          - name: wp-network
        ports:
          - "127.0.0.1:3306:3306" # Для ручной проверки, см. REAME 2 лб
        env:
          MYSQL_DATABASE: "{{ wordpress_db_name }}"
          MYSQL_USER: "{{ db_user }}"
          MYSQL_PASSWORD: "{{ db_pass }}"
          MYSQL_ROOT_PASSWORD: "{{ db_root_pass }}"
          MARIADB_REPLICATION_USER: "{{ db_repl_user }}"
          MARIADB_REPLICATION_PASSWORD: "{{ db_repl_pass }}"
        volumes:
          - "{{ mariadb_master_data_dir }}:/var/lib/mysql"
          - "/srv/docker/mariadb-conf/master.cnf:/etc/mysql/conf.d/master.cnf:ro"

    - name: Wait for MariaDB Master port to be available
      ansible.builtin.wait_for:
        host: 127.0.0.1
        port: 3306
        state: started
        delay: 5
        timeout: 120

    - name: Check if MariaDB Master is responding to queries
      community.mysql.mysql_info:
        login_user: root
        login_password: "{{ db_root_pass }}"
        login_host: 127.0.0.1
        login_port: 3306
      register: master_ping_result
      until: master_ping_result is succeeded 
      retries: 30
      delay: 5

    - name: Upload nginx config from template
      ansible.builtin.template:
        src: templates/wordpress.conf.j2
        dest: /srv/docker/nginx-conf/wordpress.conf
        mode: "0644"
    
    - name: Run WordPress FPM container
      community.docker.docker_container:
        name: "{{ wp_container_name }}"
        image: wordpress:6-fpm
        state: started
        restart_policy: unless-stopped
        networks:
          - name: wp-network
        env:
          WORDPRESS_DB_HOST: "{{ db_master }}"
          WORDPRESS_DB_NAME: "{{ wordpress_db_name }}"
          WORDPRESS_DB_USER: "{{ db_user }}"
          WORDPRESS_DB_PASSWORD: "{{ db_pass }}"
        volumes:
          - "{{ wordpress_data_dir }}:/var/www/html"
        
    - name: Run nginx container for WordPress
      community.docker.docker_container:
        name: wp-nginx
        image: nginx:alpine
        state: started
        restart_policy: unless-stopped
        ports:
          - "80:80"
          - "443:443"
        networks:
          - name: wp-network
        volumes:
          - "{{ wordpress_data_dir }}:/var/www/html:ro"
          - /srv/docker/nginx-conf/wordpress.conf:/etc/nginx/conf.d/default.conf:ro