---
- name: Home work 3 - Deploy Monitoring Stack (Prometheus + Grafana)
  hosts: carrier
  become: true
  vars:
    prometheus_version: "v3.4.1"
    grafana_version: "11.6.3"
    node_exporter_version: "v1.9.1"
    mysqld_exporter_version: "v0.17.2"

    monitor_user: monitor
    monitor_pass: monitor_password

    db_master: mariadb-master
    db_replica: mariadb-replica
  tasks:
    - name: Create directories for monitoring stack (Prometheus)
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - /srv/docker/prometheus
        - /srv/docker/grafana/provisioning/datasources

    - name: Create Grafana data directory with correct permissions
      ansible.builtin.file:
        path: /srv/docker/grafana/data
        state: directory
        owner: "472" # UID пользователя grafana внутри контейнера
        group: "472" # GID пользователя grafana внутри контейнера
        mode: "0755"

    - name: Run Node Exporter for host metrics
      community.docker.docker_container:
        name: node-exporter
        image: "prom/node-exporter:{{ node_exporter_version }}"
        state: started
        restart_policy: unless-stopped
        network_mode: host
        pid_mode: host
        volumes:
          - /:/host:ro,rslave
        command:
          - '--path.rootfs=/host'
    
    - name: Create directory for mysqld-exporter configs
      ansible.builtin.file:
        path: /srv/docker/mysqld-exporter-conf
        state: directory
        mode: "0755"

    - name: Create mysqld-exporter config for Master
      ansible.builtin.template:
        src: templates/mysqld_exporter.cnf.j2
        dest: /srv/docker/mysqld-exporter-conf/master.cnf
        mode: "0644"
      vars:
        db_host_to_monitor: "{{ db_master }}"

    - name: Create mysqld-exporter config for Replica
      ansible.builtin.template:
        src: templates/mysqld_exporter.cnf.j2
        dest: /srv/docker/mysqld-exporter-conf/replica.cnf
        mode: "0644"
      vars:
        db_host_to_monitor: "{{ db_replica }}"

    - name: Run MariaDB Exporter for Master
      community.docker.docker_container:
        name: mariadb-exporter-master
        image: "prom/mysqld-exporter:{{ mysqld_exporter_version }}"
        state: started
        restart_policy: unless-stopped
        networks:
          - name: wp-network
        ports:
          - "9104:9104"
        volumes:
          - /srv/docker/mysqld-exporter-conf/master.cnf:/etc/mysql/my.cnf:ro
        command:
          - "--config.my-cnf=/etc/mysql/my.cnf"

    - name: Run MariaDB Exporter for Replica
      community.docker.docker_container:
        name: mariadb-exporter-replica
        image: "prom/mysqld-exporter:{{ mysqld_exporter_version }}"
        state: started
        restart_policy: unless-stopped
        networks:
          - name: wp-network
        ports:
          - "9105:9104"
        volumes:
          - /srv/docker/mysqld-exporter-conf/replica.cnf:/etc/mysql/my.cnf:ro
        command:
          - "--config.my-cnf=/etc/mysql/my.cnf"

    - name: Create Prometheus config file from template
      ansible.builtin.template:
        src: templates/prometheus.yml.j2
        dest: /srv/docker/prometheus/prometheus.yml
        mode: "0644"
      notify: Restart Prometheus

    - name: Ensure Prometheus data directory has correct permissions
      ansible.builtin.file:
        path: /srv/docker/prometheus/data
        state: directory
        owner: "65534"
        group: "65534"
        mode: "0755"
        recurse: yes

    - name: Run Prometheus container
      community.docker.docker_container:
        name: prometheus
        image: "prom/prometheus:{{ prometheus_version }}"
        state: started
        restart_policy: unless-stopped
        ports:
          - "9090:9090"
        networks:
          - name: wp-network
        volumes:
          - /srv/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
          - /srv/docker/prometheus/data:/prometheus
        etc_hosts:
          host.docker.internal: host-gateway

    - name: Create Grafana datasource config
      ansible.builtin.template:
        src: templates/grafana-datasource.yml.j2
        dest: /srv/docker/grafana/provisioning/datasources/datasource.yml
      notify: Restart Grafana

    - name: Run Grafana container
      community.docker.docker_container:
        name: grafana
        image: "grafana/grafana-oss:{{ grafana_version }}"
        state: started
        restart_policy: unless-stopped
        ports:
          - "3000:3000"
        networks:
          - name: wp-network
        volumes:
          - /srv/docker/grafana/data:/var/lib/grafana
          - /srv/docker/grafana/provisioning:/etc/grafana/provisioning
    
    - name: Wait for Grafana to be ready
      ansible.builtin.wait_for:
        host: "127.0.0.1"
        port: 3000
        state: started
        delay: 10
        timeout: 300
      run_once: true

    - name: Import Grafana dashboard from grafana.com (Galera/MariaDB - Overview)
      become: false
      community.grafana.grafana_dashboard:
        grafana_url: "http://{{ ansible_host }}:3000"
        grafana_user: admin
        grafana_password: admin
        dashboard_id: 13106
        overwrite: yes
      delegate_to: localhost
      run_once: true
      register: grafana_dashboard_import
      until: grafana_dashboard_import is not failed
      retries: 10
      delay: 5

    - name: Import Grafana dashboard from grafana.com (node-exporter disk graphs)
      become: false
      community.grafana.grafana_dashboard:
        grafana_url: "http://{{ ansible_host }}:3000"
        grafana_user: admin
        grafana_password: admin
        dashboard_id: 9852
        overwrite: yes
      delegate_to: localhost
      run_once: true
      register: grafana_dashboard_import
      until: grafana_dashboard_import is not failed
      retries: 10
      delay: 5

    - name: Show monitoring access info
      ansible.builtin.debug:
        msg:
          - "Prometheus URL: http://{{ ansible_host }}:9090"
          - "Grafana URL: http://{{ ansible_host }}:3000  (Login: admin/admin)"

  handlers:
    - name: Restart Prometheus
      community.docker.docker_container:
        name: prometheus
        state: started
        restart: yes

    - name: Restart Grafana
      community.docker.docker_container:
        name: grafana
        state: started
        restart: yes
